// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace PedagioPayApiControlador.Models;

public partial class PEDAGIOPAYControladorContext : DbContext
{
    public PEDAGIOPAYControladorContext(DbContextOptions<PEDAGIOPAYControladorContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Debito> Debito { get; set; }

    public virtual DbSet<PassagemPedido> PassagemPedido { get; set; }

    public virtual DbSet<Pedido> Pedido { get; set; }

    public virtual DbSet<Usuario> Usuario { get; set; }

    public virtual DbSet<UsuarioCartao> UsuarioCartao { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Debito>(entity =>
        {
            entity.HasKey(e => e.IdDebito);

            entity.ToTable("DEBITO");

            entity.HasIndex(e => e.IdPassagem, "IX_ID_PASSAGEM").IsUnique();

            entity.Property(e => e.IdDebito).HasColumnName("ID_DEBITO");
            entity.Property(e => e.Categoria)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("CATEGORIA");
            entity.Property(e => e.CdStatus)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("CD_STATUS");
            entity.Property(e => e.Concessao)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("CONCESSAO");
            entity.Property(e => e.DhPassagem).HasColumnName("DH_PASSAGEM");
            entity.Property(e => e.DhTimestamp)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("DH_TIMESTAMP");
            entity.Property(e => e.Eixos)
                .HasDefaultValueSql("((0))")
                .HasColumnName("EIXOS");
            entity.Property(e => e.IdOsa).HasColumnName("ID_OSA");
            entity.Property(e => e.IdPassagem).HasColumnName("ID_PASSAGEM");
            entity.Property(e => e.PagoEm)
                .HasColumnType("datetime")
                .HasColumnName("PAGO_EM");
            entity.Property(e => e.Placa)
                .HasMaxLength(7)
                .IsUnicode(false)
                .HasColumnName("PLACA");
            entity.Property(e => e.Tag)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("TAG");
            entity.Property(e => e.TokenUsuario)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasDefaultValueSql("('')")
                .HasColumnName("TOKEN_USUARIO");
            entity.Property(e => e.Valor)
                .HasColumnType("smallmoney")
                .HasColumnName("VALOR");
            entity.Property(e => e.Vencimento)
                .HasDefaultValueSql("(N'')")
                .HasColumnName("VENCIMENTO");
        });

        modelBuilder.Entity<PassagemPedido>(entity =>
        {
            entity.HasKey(e => e.IdPassagemPedido);

            entity.ToTable("PASSAGEM_PEDIDO");

            entity.Property(e => e.IdPassagemPedido).HasColumnName("ID_PASSAGEM_PEDIDO");
            entity.Property(e => e.CdStatus)
                .HasDefaultValueSql("((1))")
                .HasColumnName("CD_STATUS");
            entity.Property(e => e.DhTimestamp)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("DH_TIMESTAMP");
            entity.Property(e => e.IdConcessao).HasColumnName("ID_CONCESSAO");
            entity.Property(e => e.IdPassagem).HasColumnName("ID_PASSAGEM");
            entity.Property(e => e.IdPedido).HasColumnName("ID_PEDIDO");
        });

        modelBuilder.Entity<Pedido>(entity =>
        {
            entity.HasKey(e => e.IdPedido);

            entity.ToTable("PEDIDO");

            entity.Property(e => e.IdPedido).HasColumnName("ID_PEDIDO");
            entity.Property(e => e.Amount).HasColumnName("AMOUNT");
            entity.Property(e => e.Authenticate).HasColumnName("AUTHENTICATE");
            entity.Property(e => e.AuthenticationUrl)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("AUTHENTICATION_URL");
            entity.Property(e => e.AuthorizationCode)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("AUTHORIZATION_CODE");
            entity.Property(e => e.BlEnvioStatus)
                .HasDefaultValueSql("((0))")
                .HasColumnName("BL_ENVIO_STATUS");
            entity.Property(e => e.BlExportadoPagamento)
                .HasDefaultValueSql("((0))")
                .HasColumnName("BL_EXPORTADO_PAGAMENTO");
            entity.Property(e => e.BlExportadoStatus)
                .HasDefaultValueSql("((0))")
                .HasColumnName("BL_EXPORTADO_STATUS");
            entity.Property(e => e.CardBrand)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("CARD_BRAND");
            entity.Property(e => e.CardNumber)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("CARD_NUMBER");
            entity.Property(e => e.CdStatus)
                .HasDefaultValueSql("((1))")
                .HasColumnName("CD_STATUS");
            entity.Property(e => e.DhAtualizacaoRepasse)
                .HasColumnType("datetime")
                .HasColumnName("DH_ATUALIZACAO_REPASSE");
            entity.Property(e => e.DhAtualizacaoStatus)
                .HasColumnType("datetime")
                .HasColumnName("DH_ATUALIZACAO_STATUS");
            entity.Property(e => e.DhCancelamento)
                .HasColumnType("datetime")
                .HasColumnName("DH_CANCELAMENTO");
            entity.Property(e => e.DhExportadoPagamento)
                .HasColumnType("datetime")
                .HasColumnName("DH_EXPORTADO_PAGAMENTO");
            entity.Property(e => e.DhExportadoStatus)
                .HasColumnType("datetime")
                .HasColumnName("DH_EXPORTADO_STATUS");
            entity.Property(e => e.DhPedido)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("DH_PEDIDO");
            entity.Property(e => e.DhRepasse)
                .HasColumnType("date")
                .HasColumnName("DH_REPASSE");
            entity.Property(e => e.DhTimestamp)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("DH_TIMESTAMP");
            entity.Property(e => e.IdFormaPagamento).HasColumnName("ID_FORMA_PAGAMENTO");
            entity.Property(e => e.IdStatus)
                .HasDefaultValueSql("((-1))")
                .HasColumnName("ID_STATUS");
            entity.Property(e => e.JustificativaCancelamento)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("JUSTIFICATIVA_CANCELAMENTO");
            entity.Property(e => e.MerchantOrderId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("MERCHANT_ORDER_ID");
            entity.Property(e => e.PaymentId).HasColumnName("PAYMENT_ID");
            entity.Property(e => e.PaymentMethodToken)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PAYMENT_METHOD_TOKEN");
            entity.Property(e => e.PaymentMethodTokenExpiration)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("PAYMENT_METHOD_TOKEN_EXPIRATION");
            entity.Property(e => e.ProofOfSale)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("PROOF_OF_SALE");
            entity.Property(e => e.ReturnCode).HasColumnName("RETURN_CODE");
            entity.Property(e => e.ReturnMessage)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("RETURN_MESSAGE");
            entity.Property(e => e.Settle).HasColumnName("SETTLE");
            entity.Property(e => e.TransactionId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("TRANSACTION_ID");
            entity.Property(e => e.Valor)
                .HasColumnType("smallmoney")
                .HasColumnName("VALOR");
            entity.Property(e => e.ValorRepasse)
                .HasColumnType("smallmoney")
                .HasColumnName("VALOR_REPASSE");
            entity.Property(e => e.ValorTaxa)
                .HasColumnType("smallmoney")
                .HasColumnName("VALOR_TAXA");
        });

        modelBuilder.Entity<Usuario>(entity =>
        {
            entity.HasKey(e => e.Email);

            entity.ToTable("USUARIO");

            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("EMAIL");
            entity.Property(e => e.BlValidado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("BL_VALIDADO");
            entity.Property(e => e.CdStatus)
                .HasDefaultValueSql("((1))")
                .HasColumnName("CD_STATUS");
            entity.Property(e => e.Celular)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("CELULAR");
            entity.Property(e => e.CodigoValidacao)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CODIGO_VALIDACAO");
            entity.Property(e => e.CpfCnpj)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("CPF_CNPJ");
            entity.Property(e => e.DhTimestamp)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("DH_TIMESTAMP");
            entity.Property(e => e.IdApple)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ID_APPLE");
            entity.Property(e => e.IdFacebook)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ID_FACEBOOK");
            entity.Property(e => e.IdGoogle)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ID_GOOGLE");
            entity.Property(e => e.IdUsuario)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID_USUARIO");
            entity.Property(e => e.Nome)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NOME");
            entity.Property(e => e.Senha)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("SENHA");
            entity.Property(e => e.Token)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("TOKEN");
        });

        modelBuilder.Entity<UsuarioCartao>(entity =>
        {
            entity.HasKey(e => e.IdUsuarioCartao);

            entity.ToTable("USUARIO_CARTAO");

            entity.Property(e => e.IdUsuarioCartao).HasColumnName("ID_USUARIO_CARTAO");
            entity.Property(e => e.Bandeira)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("BANDEIRA");
            entity.Property(e => e.BlPrincipal).HasColumnName("BL_PRINCIPAL");
            entity.Property(e => e.CdStatus)
                .HasDefaultValueSql("((1))")
                .HasColumnName("CD_STATUS");
            entity.Property(e => e.CodigoSeguranca)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CODIGO_SEGURANCA");
            entity.Property(e => e.DhTimestamp)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("DH_TIMESTAMP");
            entity.Property(e => e.DhValidade)
                .HasColumnType("date")
                .HasColumnName("DH_VALIDADE");
            entity.Property(e => e.DocumentoUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("DOCUMENTO_USUARIO");
            entity.Property(e => e.IdPagamentoEstorno)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ID_PAGAMENTO_ESTORNO");
            entity.Property(e => e.IdTipoCartao).HasColumnName("ID_TIPO_CARTAO");
            entity.Property(e => e.MetodoPagamentoToken)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("METODO_PAGAMENTO_TOKEN");
            entity.Property(e => e.MetodoPagamentoTokenExpiracao)
                .HasColumnType("datetime")
                .HasColumnName("METODO_PAGAMENTO_TOKEN_EXPIRACAO");
            entity.Property(e => e.MetodoTipoPagamento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("METODO_TIPO_PAGAMENTO");
            entity.Property(e => e.NomeCartao)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("NOME_CARTAO");
            entity.Property(e => e.NumeroCartao)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("NUMERO_CARTAO");
            entity.Property(e => e.TokenUsuario)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("TOKEN_USUARIO");
        });
        modelBuilder.HasSequence<short>("SQ_PEDIDO_MERCHANT_ORDER_ID")
            .HasMin(1L)
            .HasMax(9999L)
            .IsCyclic();

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}